basePath: /api
definitions:
  userModels.User:
    properties:
      email:
        type: string
      id:
        type: string
      name:
        type: string
      password:
        description: omited on response
        type: string
    required:
    - email
    - name
    - password
    type: object
info:
  contact: {}
  description: This is a basic go fiber api
  title: Basic Go Fiber API
  version: "1.0"
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Login a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userModels.User'
      tags:
      - Auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Create a new user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userModels.User'
      tags:
      - Auth
  /upload:
    get:
      consumes:
      - application/json
      description: Get all files
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      tags:
      - Upload
  /upload/:
    post:
      consumes:
      - multipart/form-data
      description: Upload a file
      parameters:
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      tags:
      - Upload
  /upload/:id:
    delete:
      consumes:
      - application/json
      description: Delete a file
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - application/json
      responses: {}
      tags:
      - Upload
    get:
      consumes:
      - application/json
      description: Get a file
      parameters:
      - description: File ID
        in: path
        name: id
        required: true
        type: string
      - description: Bearer {token}
        in: header
        name: Authorization
        required: true
        type: string
      produces:
      - multipart/form-data
      responses: {}
      tags:
      - Upload
  /users:
    get:
      consumes:
      - application/json
      description: Get all users
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userModels.User'
      tags:
      - Users
  /users/:id:
    delete:
      consumes:
      - application/json
      description: Delete a user by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userModels.User'
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: Update a user by ID
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userModels.User'
      tags:
      - Users
  /users:id:
    get:
      consumes:
      - application/json
      description: Get a user
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/userModels.User'
      tags:
      - Users
swagger: "2.0"
